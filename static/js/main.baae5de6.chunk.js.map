{"version":3,"sources":["component/TodoForm.js","component/Todo.js","component/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Math","floor","random","text","placeholder","value","onChange","target","ref","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","document","getElementById"],"mappings":"qPAsCeA,MApCf,SAAkBC,GAAQ,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,KAGfC,EAAWC,iBAAO,MAoBxB,OAlBAC,qBAAU,WACNF,EAASG,QAAQC,WAkBjB,uBAAMC,UAAU,YAAYC,SAfX,SAAAC,GACjBA,EAAEC,iBAEFZ,EAAMU,SAAS,CACXG,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMf,IAGVC,EAAS,KAOT,UACI,uBACAM,UAAU,aACVS,YAAY,WACZC,MAAOjB,EACPkB,SATa,SAAAT,GACjBR,EAASQ,EAAEU,OAAOF,QASdG,IAAKlB,IACL,wBAAQK,UAAU,cAAlB,0BCMGc,MAlCf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAAc,EACnC1B,mBAAS,CAC7BY,GAAI,KACJM,MAAO,KAHgD,mBACpDS,EADoD,KAC9CC,EAD8C,KAc3D,OAAID,EAAKf,GACE,cAAC,EAAD,CAAUe,KAAMA,EAAMlB,SATZ,SAAAS,GACjBQ,EAAWC,EAAKf,GAAIM,GACpBU,EAAQ,CACJhB,GAAI,KACJM,MAAO,QAORK,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACb,sBAAKvB,UAAWsB,EAAKE,WAAa,oBAAsB,WAAxD,UACI,qBAAmBC,QAAS,kBAAMT,EAAaM,EAAKlB,KAApD,SACKkB,EAAKd,MADAc,EAAKlB,IAGf,sBAAKJ,UAAU,QAAf,UACI,cAAC,IAAD,CACIyB,QAAS,kBAAMR,EAAWK,EAAKlB,KAC/BJ,UAAU,eACd,cAAC,IAAD,CACIyB,QAAS,kBAAML,EAAQ,CAAEhB,GAAIkB,EAAKlB,GAAIM,MAAOY,EAAKd,QAClDR,UAAU,qBAVmDuB,OC4BlEG,MA/Cf,WAAqB,IAAD,EACUlC,mBAAS,IADnB,mBACTuB,EADS,KACFY,EADE,KAkChB,OACI,gCACI,4DACA,cAAC,EAAD,CAAU1B,SAlCF,SAAAqB,GACZ,GAAKA,EAAKd,OAAQ,QAAQoB,KAAKN,EAAKd,MAApC,CAIA,IAAMqB,EAAQ,CAAIP,GAAJ,mBAAaP,IAC3BY,EAASE,OA6BL,cAAC,EAAD,CACId,MAAOA,EACPC,aA5BS,SAAAZ,GACjB,IAAI0B,EAAef,EAAMM,KAAI,SAAAC,GAIzB,OAHIA,EAAKlB,KAAOA,IACZkB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASG,IAsBDb,WAXO,SAAAb,GACf,IAAM2B,EAAY,YAAIhB,GAAOiB,QAAO,SAAAV,GAAI,OAAIA,EAAKlB,KAAOA,KACxDuB,EAASI,IAUDb,WApBO,SAACe,EAAQC,GACnBA,EAAS1B,OAAQ,QAAQoB,KAAKM,EAAS1B,OAI5CmB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAKA,EAAKhC,KAAO6B,EAASC,EAAWE,eCrB5DC,MARf,WACE,OACE,qBAAKrC,UAAU,WAAf,SACE,cAAC,EAAD,OCANsC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.baae5de6.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState('');\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    })\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        \r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input\r\n        });\r\n\r\n        setInput('');\r\n    }\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    }\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            <input \r\n            className=\"todo-input\" \r\n            placeholder=\"Add Todo\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            ref={inputRef} />\r\n            <button className=\"todo-button\">Add Todo</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react'\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport TodoForm from './TodoForm';\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine\r\n                    onClick={() => removeTodo(todo.id)}\r\n                    className='delte-icon' />\r\n                <TiEdit\r\n                    onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n                    className='delete-icon' />\r\n            </div>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n        setTodos(removeArr)\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>What's the Plan for Today?</h1>\r\n            <TodoForm onSubmit={addTodo} />\r\n            <Todo\r\n                todos={todos}\r\n                completeTodo={completeTodo}\r\n                removeTodo={removeTodo}\r\n                updateTodo={updateTodo} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import './App.css';\nimport TodoList from './component/TodoList'\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n"],"sourceRoot":""}